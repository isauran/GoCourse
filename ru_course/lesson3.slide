Урок 3. Основы языка Go: часть 2
Lesson 3
27 Jul 2025
Tags: golang, go

Перевод команды GoCourse
https://github.com/RedHatOfficial/GoCourse



*О чём этот урок?

В этом уроке мы познакомимся с:
- анонимными функциями (лямбда)
- замыканиями (closures)
- методами
- интерфейсами
- приведением типов (type assertions)
- стандартной библиотекой Go
- стилем "линия взгляда" (line of sight)


*Анонимные функции (лямбда)

Анонимная функция — это функция без имени. Её можно сохранить в переменную или вызвать сразу:

```
f := func(x int) int {
    return x * x
}
fmt.Println(f(3)) // 9
```


*Где применяются лямбда-функции?
- defer
- go (запуск в отдельной "нитке")
- сортировка, фильтрация
- колбэки (обратные вызовы)


*Замыкания (closures)

Замыкание — это функция, которая "запоминает" переменные из внешнего окружения:

```
func counter() func() int {
    n := 0
    return func() int {
        n++
        return n
    }
}
c := counter()
fmt.Println(c()) // 1
fmt.Println(c()) // 2
```


*Методы

Метод — это функция, "привязанная" к типу:

```
type Person struct {
    Name string
}
func (p Person) SayHello() {
    fmt.Println("Привет, меня зовут", p.Name)
}
```


*Интерфейсы

Интерфейс — это набор методов, которые должен реализовать тип:

```
type Speaker interface {
    SayHello()
}
```

Если тип реализует все методы интерфейса — он подходит под этот интерфейс.


*Приведение типов (type assertion)

Иногда нужно узнать, какой конкретный тип "спрятан" за интерфейсом:

```
var s Speaker
p := Person{"Иван"}
s = p
if person, ok := s.(Person); ok {
    person.SayHello()
}
```


*Стандартная библиотека Go

Go — это не только язык, но и большая библиотека для работы с файлами, сетью, текстом, числами и многим другим.


*Линия взгляда (line of sight)

Пишите код так, чтобы "основной путь" (happy path) был виден слева, а обработка ошибок — коротко и без вложенности:

```
if err != nil {
    return err
}
// основной код
```


*Итоги

- Лямбда-функции и замыкания — мощный инструмент
- Методы и интерфейсы — основа для ООП в Go
- Приведение типов — для работы с интерфейсами
- Стандартная библиотека — ваш помощник
- Пишите код просто и понятно!


*Не бойтесь пробовать!

Экспериментируйте, пишите свои функции и типы — так вы быстрее освоите Go!
