Title: Тестирование в Go
Author: Перевод команды GoCourse

---

# Зачем нужны тесты?

Тесты помогают убедиться, что программа работает правильно и не ломается при изменениях.

---

# Виды тестов в Go

- Модульные (unit) тесты
- Тесты производительности (benchmarks)
- Тесты API и интеграционные

---

# Как писать тесты в Go?

- Тесты пишутся в файлах с суффиксом `_test.go`
- Функции тестов называются `Test...` и принимают параметр `*testing.T`
- Запуск тестов:
```
go test
```

---

# Пример простого теста

```
func TestAdd(t *testing.T) {
    got := Add(2, 2)
    want := 4
    if got != want {
        t.Errorf("Ожидалось %d, а получилось %d", want, got)
    }
}
```

---

# Советы

- Используйте "табличные" тесты для проверки разных входных данных
- Для сложных случаев используйте сторонние библиотеки (`testify`, `gomega` и др.)

---

# Итоги

- В Go тесты — это просто и удобно
- Пишите тесты для своего кода — это поможет избежать ошибок
- Не бойтесь экспериментировать с разными видами тестов!
