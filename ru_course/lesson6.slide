Урок 6. HTTP и работа с вебом в Go
Lesson 6
27 Jul 2025
Tags: golang, go

Перевод команды GoCourse
https://github.com/RedHatOfficial/GoCourse



*Веб-сервисы на Go

Go часто используют для создания веб-сервисов и микросервисов. В языке есть всё необходимое для работы с HTTP "из коробки".


*Простой веб-сервер

В Go очень легко создать свой веб-сервер:

```
package main
import (
    "fmt"
    "net/http"
)
func handler(w http.ResponseWriter, r *http.Request) {
    fmt.Fprintln(w, "Привет, мир!")
}
func main() {
    http.HandleFunc("/", handler)
    http.ListenAndServe(":8080", nil)
}
```


*Несколько путей (routes)

Можно обрабатывать разные адреса (пути):
```
http.HandleFunc("/hello", helloHandler)
http.HandleFunc("/bye", byeHandler)
```


*Получение данных из запроса

- Параметры в адресе (query): `r.URL.Query().Get("name")`
- Тело запроса (body): `r.Body`
- JSON: используйте пакет `encoding/json`


*Ответы, заголовки и коды статуса

- Чтобы отправить заголовок: `w.Header().Set("Content-Type", "application/json")`
- Чтобы отправить код: `w.WriteHeader(404)`


*HTTP-клиент

Go позволяет делать HTTP-запросы к другим сайтам:
```
resp, err := http.Get("https://example.com")
```


*Прокси и метрики

Можно писать свои прокси-серверы и собирать метрики (например, считать количество запросов).


*Итоги

- Go отлично подходит для веба
- Всё для HTTP уже есть в стандартной библиотеке
- Можно быстро сделать свой сервер или клиент


*Не бойтесь пробовать!

Пишите свои веб-сервисы, экспериментируйте с обработкой запросов и ответов!
