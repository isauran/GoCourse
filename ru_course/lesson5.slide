Title: Урок 5. Тестирование, CGo и инструменты
Author: Перевод команды GoCourse

---

# Тестирование в Go

Go поддерживает тесты "из коробки". Для запуска тестов используйте команду:
```
go test
```

- Тесты пишутся в файлах, которые заканчиваются на `_test.go`.
- Функции тестов называются `Test...` и принимают параметр `*testing.T`.

---

# Бенчмарки (измерение скорости)

Go позволяет измерять скорость работы кода:
```
go test -bench .
```
- Бенчмарки — это функции `Benchmark...` с параметром `*testing.B`.
- Можно измерять не только скорость, но и память (`-benchmem`).

---

# Проверки (assertions)

В Go нет ключевого слова `assert`, но можно использовать обычные условия или сторонние библиотеки для проверки результатов.

---

# CGo — работа с C-кодом

CGo позволяет вызывать C-функции из Go и наоборот. Это нужно редко, но иногда бывает полезно.
- Используйте CGo только если нет решения на Go.
- Не забывайте освобождать память, выделенную в C.

---

# Встроенные инструменты Go

- `go vet` — ищет подозрительные места и ошибки
- `go fmt` — автоматически форматирует код
- `go fix` — помогает обновить код для новых версий Go

---

# Внешние инструменты

- `gosec` — проверка безопасности
- `golangci-lint` — объединяет много проверок
- `gocyclo`, `goconst`, `errcheck` и другие

---

# Управление зависимостями

- Раньше: GOPATH, vendoring, разные инструменты
- Сейчас: Go modules (`go.mod`)
- Для работы с зависимостями используйте:
```
go mod init
```
- Все зависимости и их версии хранятся в файле `go.mod`

---

# Итоги

- Тесты и бенчмарки — важная часть Go
- Есть встроенные и внешние инструменты для проверки и форматирования кода
- Для работы с C-кодом используйте CGo, но осторожно
- Управляйте зависимостями через Go modules

---

# Не бойтесь пробовать!

Пишите тесты, экспериментируйте с инструментами — это поможет стать лучше программистом!
