package main

import (
	"fmt"
	"log"
	"net/http"
	"net/http/httputil"
	"net/url"
	"os"
	"os/exec"
	"strings"
	"time"
)

func main() {
	port := "3999"
	presentPort := "3998" // Go present –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –Ω–∞ —ç—Ç–æ–º –ø–æ—Ä—Ç—É

	if len(os.Args) > 1 {
		port = os.Args[1]
	}

	// –ó–∞–ø—É—Å–∫–∞–µ–º Go present –Ω–∞ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–º –ø–æ—Ä—Ç—É
	fmt.Println("üöÄ Starting Go present server on internal port", presentPort)
	cmd := exec.Command("go", "run", "golang.org/x/tools/cmd/present", "-http=:"+presentPort, "-play=false")
	cmd.Stdout = os.Stdout
	cmd.Stderr = os.Stderr
	go func() {
		if err := cmd.Run(); err != nil {
			log.Printf("Go present server error: %v", err)
		}
	}()

	// –î–∞–µ–º –≤—Ä–µ–º—è Go present —Å–µ—Ä–≤–µ—Ä—É –∑–∞–ø—É—Å—Ç–∏—Ç—å—Å—è
	time.Sleep(2 * time.Second)

	// –°–æ–∑–¥–∞–µ–º –ø—Ä–æ–∫—Å–∏ –∫ Go present —Å–µ—Ä–≤–µ—Ä—É
	presentURL, _ := url.Parse("http://localhost:" + presentPort)
	proxy := httputil.NewSingleHostReverseProxy(presentURL)

	// –°–æ–∑–¥–∞–µ–º –∫–∞—Å—Ç–æ–º–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫
	http.HandleFunc("/", func(w http.ResponseWriter, r *http.Request) {
		// –ï—Å–ª–∏ –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç—Å—è –∫–æ—Ä–µ–Ω—å, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –Ω–∞—à index.html
		if r.URL.Path == "/" {
			http.ServeFile(w, r, "index.html")
			return
		}

		// –ï—Å–ª–∏ –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç—Å—è –Ω–∞—à –∫–∞—Å—Ç–æ–º–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç (presentations/), –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å–∞–º–∏
		if strings.HasPrefix(r.URL.Path, "/presentations/") {
			http.ServeFile(w, r, "."+r.URL.Path)
			return
		}

		// –î–ª—è –≤—Å–µ—Ö –æ—Å—Ç–∞–ª—å–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ –∏—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–æ–∫—Å–∏ –∫ Go present
		proxy.ServeHTTP(w, r)
	})

	fmt.Printf("üåê Custom presentation server started on http://localhost:%s\n", port)
	fmt.Println("")
	fmt.Println("üìñ Access presentations:")
	fmt.Printf("   üåê Language Selection: http://localhost:%s/\n", port)
	fmt.Printf("   üá∫üá∏ English:           http://localhost:%s/presentations/en/\n", port)
	fmt.Printf("   üá∑üá∫ Russian:           http://localhost:%s/presentations/ru/\n", port)
	fmt.Println("")
	fmt.Println("üõë Press Ctrl+C to stop the server")
	fmt.Println("")

	log.Fatal(http.ListenAndServe(":"+port, nil))
}
